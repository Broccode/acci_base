FROM lukemathwalker/cargo-chef:latest-rust-1.82 AS chef
WORKDIR /app

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
COPY --from=planner /app/recipe.json recipe.json

# Install system dependencies for native builds
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    cmake \
    clang \
    llvm-dev \
    libclang-dev \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Build dependencies - this is the caching Docker layer!
RUN cargo chef cook --recipe-path recipe.json

# Build development dependencies
RUN cargo install cargo-watch cargo-edit cargo-audit cargo-deny
RUN rustup component add clippy

# Copy Clippy configuration
COPY .clippy.toml .
COPY rustfmt.toml .

# Build application
COPY . .
RUN cargo clippy --all-features -- -D warnings && \
    cargo build

FROM rust:1.82-slim

# Install development dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    git \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the binary and tools from builder
COPY --from=builder /app/target/debug/acci_base /app/
COPY --from=builder /usr/local/cargo/bin/cargo-watch /usr/local/cargo/bin/
COPY --from=builder /usr/local/cargo/bin/cargo-add /usr/local/cargo/bin/
COPY --from=builder /usr/local/cargo/bin/cargo-audit /usr/local/cargo/bin/
COPY --from=builder /usr/local/cargo/bin/cargo-deny /usr/local/cargo/bin/
RUN rustup component add clippy

# Copy configuration files
COPY .clippy.toml /app/
COPY rustfmt.toml /app/

# Create mount points for development
VOLUME ["/root/.cargo"]
VOLUME ["/app/target"]

# Development configuration
ENV RUST_BACKTRACE=1
ENV RUST_LOG=debug

ARG SERVER_BACKEND_PORT=3333
EXPOSE ${SERVER_BACKEND_PORT}

# Use cargo watch for hot-reloading
CMD ["cargo", "watch", "-x", "build", "-x", "check", "-x", "test", "-x", "run"]
