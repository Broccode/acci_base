services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    volumes:
      - ..:/app
      - cargo_cache:/root/.cargo
      - app_target_data:/app/target
      # - ../src:/app/src
      # - ../tests:/app/tests
      # - ../Cargo.toml:/app/Cargo.toml
      # - ../Cargo.lock:/app/Cargo.lock
      # - ../config:/app/config
      # - ../scripts:/app/scripts
      # - ../locales:/app/locales
    ports:
      - "${SERVER_BACKEND_PORT:-3333}:${SERVER_BACKEND_PORT:-3333}"
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=${LOGGING_LEVEL:-debug}
      - CONFIG_FILE=/app/config.toml
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-acci}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-acci-backend}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET:-acci_secret}
      - EVENTSTORE_CONNECTION_STRING=esdb://eventstore:2113?tls=false
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-acci}:${RABBITMQ_PASSWORD:-acci}@rabbitmq:5672
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      eventstore:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.8
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/${KEYCLOAK_DB_NAME:-acci}
      - KC_DB_USERNAME=${DATABASE_USER:-acci}
      - KC_DB_PASSWORD=${DATABASE_PASSWORD:-acci}
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_HEALTH_ENABLED=true
      - KC_HEALTH_CHECK_URI=/auth/health/ready
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
      - 9000:9000
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
      - "CMD-SHELL"
      - |
        exec 3<>/dev/tcp/localhost/9000 &&
        echo -e 'GET /auth/health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3 &&
        cat <&3 | grep -q '200 OK'
      interval: 30s
      timeout: 5s
      retries: 20

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-acci}
      - POSTGRES_USER=${DATABASE_USER:-acci}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-acci}
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DATABASE_USER:-acci}
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    command: redis-server ${REDIS_PASSWORD:+--requirepass ${REDIS_PASSWORD}} --bind 0.0.0.0
    environment:
      - REDIS_URL=${REDIS_URL:-redis://localhost:6379}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  eventstore:
    image: eventstore/eventstore:23.10.0-bookworm-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "${EVENTSTORE_TCP_PORT:-1113}:1113"
      - "${EVENTSTORE_HTTP_PORT:-2113}:2113"
    volumes:
      - eventstore_data:/var/lib/eventstore
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:2113/health/live || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-acci}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-acci}
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  cargo_cache:
  app_target_data:
  eventstore_data:
  rabbitmq_data:
