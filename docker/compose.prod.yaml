services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    ports:
      - "${SERVER_BACKEND_PORT:-3333}:${SERVER_BACKEND_PORT:-3333}"
    environment:
      - RUST_BACKTRACE=0
      - RUST_LOG=${LOGGING_LEVEL:-info}
      - CONFIG_FILE=/app/config.toml
      - KEYCLOAK_URL=http://keycloak:8080/auth
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-acci}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-acci-backend}
      - KEYCLOAK_CLIENT_SECRET_FILE=/run/secrets/keycloak_client_secret
    volumes:
      - ../config/config.prod.toml:/app/config.toml
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    secrets:
      - keycloak_client_secret

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command: start --optimized
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/${KEYCLOAK_DB_NAME:-keycloak}
      - KC_DB_USERNAME=${DATABASE_USER:-acci}
      - KC_DB_PASSWORD_FILE=/run/secrets/db_password
      - KC_HOSTNAME_STRICT=false
      - KC_PROXY=edge
      - KC_HTTP_RELATIVE_PATH=/auth
    volumes:
      - keycloak_themes:/opt/keycloak/themes
      - keycloak_data:/opt/keycloak/data
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - keycloak_admin_password
      - db_password
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-acci}
      - POSTGRES_USER=${DATABASE_USER:-acci}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - db_password
    deploy:
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test: pg_isready -U ${DATABASE_USER:-acci}
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --bind 0.0.0.0
    environment:
      - REDIS_URL=${REDIS_URL:-redis://localhost:6379}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    secrets:
      - redis_password
    deploy:
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  keycloak_themes:
  keycloak_data:

secrets:
  db_password:
    external: true
  redis_password:
    external: true
  keycloak_admin_password:
    external: true
  keycloak_client_secret:
    external: true

networks:
  default:
    driver: overlay
    driver_opts:
      encrypted: "true" 