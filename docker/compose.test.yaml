services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=${LOGGING_LEVEL:-debug}
      - CONFIG_FILE=/app/config/config.test.toml
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-acci-test}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-acci-test}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET:-acci_test_secret}
      - EVENTSTORE_CONNECTION_STRING=esdb://eventstore:2113?tls=false
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-acci}:${RABBITMQ_PASSWORD:-acci}@rabbitmq:5672
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      eventstore:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.8
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/${DATABASE_NAME:-acci_test}
      - KC_DB_USERNAME=${DATABASE_USER:-acci}
      - KC_DB_PASSWORD=${DATABASE_PASSWORD:-acci}
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_HEALTH_ENABLED=true
    ports:
      - "${KEYCLOAK_PORT:-18080}:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-acci_test}
      - POSTGRES_USER=${DATABASE_USER:-acci}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-acci}
    ports:
      - "${DATABASE_PORT:-15432}:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DATABASE_USER:-acci}
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --bind 0.0.0.0
    ports:
      - "${REDIS_PORT:-16379}:6379"
    tmpfs:
      - /data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  eventstore:
    image: eventstore/eventstore:23.10.0-bookworm-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "${EVENTSTORE_TCP_PORT:-11113}:1113"
      - "${EVENTSTORE_HTTP_PORT:-12113}:2113"
    tmpfs:
      - /var/lib/eventstore
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:2113/health/live || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-acci}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-acci}
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "${RABBITMQ_PORT:-15672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15673}:15672"
    tmpfs:
      - /var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
